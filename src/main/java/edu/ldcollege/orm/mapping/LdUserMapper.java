package edu.ldcollege.orm.mapping;

import java.util.List;
import org.apache.ibatis.annotations.Delete;
import org.apache.ibatis.annotations.Insert;
import org.apache.ibatis.annotations.Result;
import org.apache.ibatis.annotations.Results;
import org.apache.ibatis.annotations.Select;
import org.apache.ibatis.annotations.Update;
import org.apache.ibatis.type.JdbcType;

import edu.ldcollege.orm.domain.LdUser;

public interface LdUserMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table lduser
     *
     * @mbg.generated
     */
    @Delete({
        "delete from lduser",
        "where id = #{id,jdbcType=BIGINT}"
    })
    int deleteByPrimaryKey(Long id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table lduser
     *
     * @mbg.generated
     */
    @Insert({
        "insert into lduser (id, login_name, ",
        "password, qq, token, ",
        "name, enabled)",
        "values (#{id,jdbcType=BIGINT}, #{loginName,jdbcType=VARCHAR}, ",
        "#{password,jdbcType=VARCHAR}, #{qq,jdbcType=VARCHAR}, #{token,jdbcType=VARCHAR}, ",
        "#{name,jdbcType=VARCHAR}, #{enabled,jdbcType=BIT})"
    })
    int insert(LdUser record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table lduser
     *
     * @mbg.generated
     */
    @Select({
        "select",
        "id, login_name, password, qq, token, name, enabled",
        "from lduser",
        "where id = #{id,jdbcType=BIGINT}"
    })
    @Results({
        @Result(column="id", property="id", jdbcType=JdbcType.BIGINT, id=true),
        @Result(column="login_name", property="loginName", jdbcType=JdbcType.VARCHAR),
        @Result(column="password", property="password", jdbcType=JdbcType.VARCHAR),
        @Result(column="qq", property="qq", jdbcType=JdbcType.VARCHAR),
        @Result(column="token", property="token", jdbcType=JdbcType.VARCHAR),
        @Result(column="name", property="name", jdbcType=JdbcType.VARCHAR),
        @Result(column="enabled", property="enabled", jdbcType=JdbcType.BIT)
    })
    LdUser selectByPrimaryKey(Long id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table lduser
     *
     * @mbg.generated
     */
    @Select({
        "select",
        "id, login_name, password, qq, token, name, enabled",
        "from lduser"
    })
    @Results({
        @Result(column="id", property="id", jdbcType=JdbcType.BIGINT, id=true),
        @Result(column="login_name", property="loginName", jdbcType=JdbcType.VARCHAR),
        @Result(column="password", property="password", jdbcType=JdbcType.VARCHAR),
        @Result(column="qq", property="qq", jdbcType=JdbcType.VARCHAR),
        @Result(column="token", property="token", jdbcType=JdbcType.VARCHAR),
        @Result(column="name", property="name", jdbcType=JdbcType.VARCHAR),
        @Result(column="enabled", property="enabled", jdbcType=JdbcType.BIT)
    })
    List<LdUser> selectAll();

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table lduser
     *
     * @mbg.generated
     */
    @Update({
        "update lduser",
        "set login_name = #{loginName,jdbcType=VARCHAR},",
          "password = #{password,jdbcType=VARCHAR},",
          "qq = #{qq,jdbcType=VARCHAR},",
          "token = #{token,jdbcType=VARCHAR},",
          "name = #{name,jdbcType=VARCHAR},",
          "enabled = #{enabled,jdbcType=BIT}",
        "where id = #{id,jdbcType=BIGINT}"
    })
    int updateByPrimaryKey(LdUser record);
}